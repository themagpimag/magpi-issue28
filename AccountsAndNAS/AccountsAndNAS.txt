Since buying several Raspberry Pis, the associated SD cards have been re-installed several times.  Sometimes files were lost, since the back up of the files was not complete.  In Issue 10 of The MagPi there is an article that describes how to back up an SD card and then recover files.  However, this can be too heavy for quick and regular backups.

Often the files that are being developed are typically in a users home directory, whereas the other files on the SD card were installed with the Debian package management command apt-get or with the Python package manager PyPI.  This means that most of the SD card can be reinstalled using the basic image and a script that contains apt-get and PyPi installation commands.  In this example, the part that needs to be kept is the users home directory.  Either backing up the home directory or mounting it from some network attached storage (NAS) allows the files in the home directory to be viewed once the Raspberry Pi has been turned off or taken away to another location.

rsync backup

The Linux command rsync can be used to copy files, where all of the file attibutes such as the time stamp, symbolic links and user ownership are preserved.

rsync -av /home/pi/ pi@remotemachine:/backup/pi/

This command will preseve all of the permissions, but will not delete files on the remote side.  (The command required that there is a user called pi on the remotemachine and will prompt for a password.)

Files that are on the remote side that are no longer present on the local side can be removed from the remote side using

rsync -av --delete /home/pi/ remotemachine:/backup/pi/

However, files that are deleted can be kept as incremental backups instead:

#!/bin/bash  
backup_disk="/media/backup"  # USB disk that was attached to a Linux PC
exclude_from="/etc/rsync-conf/exclude_list.txt"  # A list of files to ignore
log_dir="/root/backup/log"  # 
backup_log=$log_dir"/backup-"$(date "+%Y%m%d-%H%M%S")".log"
inc_dir=$backup_disk"/inc/"$(date "+%Y%m%d-%H%M%S")
backup_dir=$backup_disk"/backup-root"

dir="/home/pi/"
mkdir -p "$backup_dir$dir" 
rsync -av --delete --exclude-from=$exclude_from --backup --backup-dir=$inc_dir $dir "$backup_dir$dir" > $backup_log

where the exclude_list.txt file contains 

- */.cache/
- */RpiImages/

to exclude files in the .cache and RpiImages directory.  More information and examples can be found by typing man rsync.

Remote home directories

Unless the rsync command is run, then the files are not copied to the remote storage.  While it is possible to make the rsync command run automatically either when the Raspberry Pi shuts down or at a regular time with crontab, some younger users may forget to do this or allow time for this.  Therefore, mounting the home directory from a remote disk can be a better solution.

The home directory of a Raspberry Pi can be mounted using NFS or CIFS (with UNIX permissions on the remote disk).  Both NFS or CIFS provide stable and responsive solutions.  If Windows permissions are used on the CIFS disk, then the UNIX permissions on the Raspberry Pi will not be preserved which may cause problems for some applications.
